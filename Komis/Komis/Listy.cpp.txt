#include "Listy.h"



Listy::Listy()
{
}


Listy::~Listy()
{
}

std::list<Pojazd> Listy::GetListByPrzebieg(int przebiegOd, int przebiegDo)
{
	std::list<Pojazd> lista;
	std::list<Pojazd>::iterator iterator;

	if (przebiegDo < 0)
	{
		for (iterator = ListaPojazdow.begin(); iterator != ListaPojazdow.end(); ++iterator)
		{
			if (iterator->GetPrzebieg() > przebiegOd)
			{
				lista.push_back(*iterator);
			}
		}
	}
	else
	{
		for (iterator = ListaPojazdow.begin(); iterator != ListaPojazdow.end(); ++iterator)
		{
			if (iterator->GetPrzebieg() > przebiegOd && iterator->GetPrzebieg() < przebiegDo)
			{
				lista.push_back(*iterator);
			}
		}
	}
	return lista;
}

std::list<Pojazd> Listy::GetListByRocznik(short rokOd, short rokDo)
{
	std::list<Pojazd> lista;
	std::list<Pojazd>::iterator iterator;

	if (rokDo < 0)
	{
		for (iterator = ListaPojazdow.begin(); iterator != ListaPojazdow.end(); ++iterator)
		{
			if (iterator->GetRokProdukcji() > rokOd)
			{
				lista.push_back(*iterator);
			}
		}
	}
	else
	{
		for (iterator = ListaPojazdow.begin(); iterator != ListaPojazdow.end(); ++iterator)
		{
			if (iterator->GetRokProdukcji() > rokOd && iterator->GetRokProdukcji() < rokDo)
			{
				lista.push_back(*iterator);
			}
		}
	}
	return lista;
}

std::list<Pojazd> Listy::GetListByPaliwo(Paliwo paliwo)
{
	std::list<Pojazd> lista;
	std::list<Pojazd>::iterator iterator;

	for (iterator = ListaPojazdow.begin(); iterator != ListaPojazdow.end(); ++iterator)
	{
		if (iterator->GetRodzajPaliwa() == paliwo)
		{
			lista.push_back(*iterator);
		}
	}
	return lista;
}

std::list<Pojazd> Listy::GetListByMoc(short mocOd, short mocDo)
{
	std::list<Pojazd> lista;
	std::list<Pojazd>::iterator iterator;

	if (mocDo < 0)
	{
		for (iterator = ListaPojazdow.begin(); iterator != ListaPojazdow.end(); ++iterator)
		{
			if (iterator->GetMoc() > mocOd)
			{
				lista.push_back(*iterator);
			}
		}
	}
	else
	{
		for (iterator = ListaPojazdow.begin(); iterator != ListaPojazdow.end(); ++iterator)
		{
			if (iterator->GetMoc() > mocOd && iterator->GetMoc() < mocDo)
			{
				lista.push_back(*iterator);
			}
		}
	}
	return lista;
}

std::list<Pojazd> Listy::GetListByPojemnosc(int pojemnoscOd, int pojemnoscDo)
{
	std::list<Pojazd> lista;
	std::list<Pojazd>::iterator iterator;

	if (pojemnoscDo < 0)
	{
		for (iterator = ListaPojazdow.begin(); iterator != ListaPojazdow.end(); ++iterator)
		{
			if (iterator->GetPojemnosc() > pojemnoscOd)
			{
				lista.push_back(*iterator);
			}
		}
	}
	else
	{
		for (iterator = ListaPojazdow.begin(); iterator != ListaPojazdow.end(); ++iterator)
		{
			if (iterator->GetPojemnosc() > pojemnoscOd && iterator->GetPojemnosc() < pojemnoscDo)
			{
				lista.push_back(*iterator);
			}
		}
	}
	return lista;
}

std::list<Pojazd> Listy::GetListByRodzajNadwozia(TypNadwozia typ)
{
	std::list<Pojazd> lista;
	std::list<Pojazd>::iterator iterator;

	for (iterator = ListaPojazdow.begin(); iterator != ListaPojazdow.end(); ++iterator)
	{
		if (iterator->GetTypNadwozia() == typ)
		{
			lista.push_back(*iterator);
		}
	}
	return lista;
}
